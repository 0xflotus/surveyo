From c2120a21bdbb4436ec535cd72e8f414d51eef2f7 Mon Sep 17 00:00:00 2001
From: Tejas Dinkar <tejas@gja.in>
Date: Sun, 2 Aug 2020 14:37:40 +0530
Subject: [PATCH] tmp

---
 package.json                              |   1 +
 src/components/BigCard/index.tsx          | 117 ++++++++++------------
 src/components/MCQCard/index.tsx          |  15 +--
 src/components/TextQuestionCard/index.tsx |   8 +-
 4 files changed, 65 insertions(+), 76 deletions(-)

diff --git a/package.json b/package.json
index 9b83363..9d023d1 100644
--- a/package.json
+++ b/package.json
@@ -12,6 +12,7 @@
     "@types/node": "^14.0.27",
     "@types/react": "^16.9.44",
     "@types/react-dom": "^16.9.8",
+    "immutability-helper": "^3.1.1",
     "react": "^16.13.1",
     "react-dom": "^16.13.1",
     "react-scripts": "3.4.1",
diff --git a/src/components/BigCard/index.tsx b/src/components/BigCard/index.tsx
index e04609d..134b074 100644
--- a/src/components/BigCard/index.tsx
+++ b/src/components/BigCard/index.tsx
@@ -6,82 +6,69 @@ import header from '../../images/banner4.jpg';
 import TextQuestionCard from '../TextQuestionCard'
 import MCQCard from '../MCQCard'
 import DropDown from '../DropDown'
+import update from 'immutability-helper';
 const { Meta } = Card;
 
 
 // type BigCardState = {children: []}
 
-function BigCard() {
-    const [children, modifyChildren] = useState<JSX.Element[]>( [] );
-    const [count, setCount] = useState( 0 );
-    const [questionCard, setQuestionCard] = useState("text")
+type question = any;
 
-    const deleteCard = (id: string) => {
-      console.log("ID is: ",id)
-      // setCount(count => count - 1)
-      modifyChildren(children => {
-        console.log(children)
-        let newChildren = children.filter((value, index,array) => value.key != id )
-        console.log(newChildren)
-        return newChildren
-      })
-    }
+function BigCard() {
+  // questions: [{type: "text", question: "Foo", options?: ["Something"]}]
+  const [questions, setQuestions] = useState<question>([]);
+  const [questionCard, setQuestionCard] = useState("text")
 
-    const addCard = () => {
-      setCount(count => count + 1)
-      modifyChildren(children => [...children, <div key={count}><Card > {getCard(questionCard, count)} </Card><br/><br/></div>])
+  const getCard = (i: number) => {
+    const question = questions[i];
+    const params = {
+      question: question,
+      updateQuestion: (question: question) => setQuestions(update(questions, { $splice: [[i, 1, question]] })),
+      deleteQuestion: () => setQuestions(update(questions, { $splice: [[i, 1]] })),
     }
-
-    const getCard = (questionType: string, listId: any) => {
-      switch(questionType){
-        case "text":
-          return <TextQuestionCard deleteCard={deleteCard} listId={listId}/>
-        case "mcq":
-          return <MCQCard deleteCard={deleteCard} listId={listId}/>
-        default:
-          return <TextQuestionCard deleteCard={deleteCard} listId={listId}/>
-      }
+    switch (question.type) {
+      case "mcq":
+        return <MCQCard {...params} />
+      default:
+        return <TextQuestionCard {...params} />
     }
+  }
 
-
-
-    return (<div>
-      <Card
-    cover={
-      <img
-        alt="example"
-        src={header}
+  return (<div>
+    <Card cover={
+        <img
+          alt="example"
+          src={header}
         // style={{ height: 240 }}
-      />
-      
-    }
-    // style={{ width: 240 }}
-    actions={[
-      <DropDown changeCardType={setQuestionCard}/>,
-      <BorderInnerOutlined key="edit" onClick={ () => addCard() } />,
-    //   <EllipsisOutlined key="ellipsis" />,
-    ]}
-  >
-    <Meta
-    //   avatar={<Avatar src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png" />}
-      title="Surveyo"
-      description="Simple App that let's you create simple surveys"
-    />
-    <br/>
-    <br/>
+        />
 
-    {children}
-    <br/>
-    <br/>
-  </Card>
-  <br/>
-  <br/>
-  <br/>
-  <br/>
-  <br/>
-  <br/>
-      </div>
-    );
+      }
+      // style={{ width: 240 }}
+      actions={[
+        <DropDown changeCardType={setQuestionCard} />,
+        <BorderInnerOutlined key="edit" onClick={() => setQuestions(questions.concat({type: questionCard}))} />,
+        //   <EllipsisOutlined key="ellipsis" />,
+      ]}
+    >
+      <Meta
+        //   avatar={<Avatar src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png" />}
+        title="Surveyo"
+        description="Simple App that let's you create simple surveys"
+      />
+      <br />
+      <br />
+      {questions.map((question: question, index: number) => <div key={index}><Card >{getCard(index)}</Card><br /><br /></div>)}
+      <br />
+      <br />
+    </Card>
+    <br />
+    <br />
+    <br />
+    <br />
+    <br />
+    <br />
+  </div>
+  );
 }
 
-export default BigCard;
\ No newline at end of file
+export default BigCard;
diff --git a/src/components/MCQCard/index.tsx b/src/components/MCQCard/index.tsx
index c99f1f2..467230e 100644
--- a/src/components/MCQCard/index.tsx
+++ b/src/components/MCQCard/index.tsx
@@ -11,7 +11,7 @@ const formItemLayout = {
     xs: { span: 24 },
     sm: { span: 20 },
   },
-  
+
 };
 const formItemLayoutWithOutLabel = {
   wrapperCol: {
@@ -34,17 +34,18 @@ const rowC = {
 
 
 // display:flex; flex-direction:row;
-function MCQCard(props: any) {
+function MCQCard({question, updateQuestion, deleteQuestion}: any) {
   // const onFinish = (values: any) => {
   //   console.log('Received values of form:', values);
   // };
-  
+  const options = question.options || [];
+
     return (<div>
       <Card
       bordered={false}
       actions={[
-        <DeleteOutlined  key="setting" label="Check2" onClick={(e) => {props.deleteCard(props.listId)}} />,
-        ]}
+        <DeleteOutlined  key="setting" label="Check2" onClick={() => deleteQuestion()} />
+      ]}
       >
     <Input placeholder="Enter your question here" allowClear />
     <br/>
@@ -105,7 +106,7 @@ function MCQCard(props: any) {
               <Button
                 type="dashed"
                 onClick={() => {
-                  add();
+                  updateQuestion({...question, options: [...options, ""]});
                 }}
                 style={{ width: '60%' }}
               >
@@ -122,4 +123,4 @@ function MCQCard(props: any) {
   );
 }
 
-export default MCQCard;
\ No newline at end of file
+export default MCQCard;
diff --git a/src/components/TextQuestionCard/index.tsx b/src/components/TextQuestionCard/index.tsx
index c9ba772..2eaec9c 100644
--- a/src/components/TextQuestionCard/index.tsx
+++ b/src/components/TextQuestionCard/index.tsx
@@ -7,7 +7,7 @@ const { TextArea } = Input;
 const { Option } = Select;
 // type BigCardState = {children: []}
 
-function TextQuestionCard(props: any) {
+function TextQuestionCard({question, updateQuestion, deleteQuestion}: any) {
     // const onChange = (e: any) => {
     //   console.log(e);
     // };
@@ -15,9 +15,9 @@ function TextQuestionCard(props: any) {
       <Card
       bordered={false}
       actions={[
-        <DeleteOutlined  key="setting" label="Check2" onClick={(e) => {props.deleteCard(props.listId)}} />,
+        <DeleteOutlined  key="setting" label="Check2" onClick={(e) => {deleteQuestion()}} />,
         ]}>
-      <Input placeholder="Enter your question here" allowClear />
+      <Input placeholder="Enter your question here" allowClear value={question.text} onChange={(e) => updateQuestion({...question, text: e.target.value})} />
       <br />
       <br />
       <TextArea placeholder="Short answer here" allowClear  disabled />
@@ -26,4 +26,4 @@ function TextQuestionCard(props: any) {
     );
 }
 
-export default TextQuestionCard;
\ No newline at end of file
+export default TextQuestionCard;
-- 
2.24.3 (Apple Git-128)

